color = "orange",
fillColor = "gold",
fillOpacity = 0.3,
weight = 1.5)
streams_outline
data <- read_csv("~/PhD_Code/Spatial_ATX/Raw_Data/CEDEN_allyears_ATX.csv")
data <- data %>%
filter(data$StationName !="Laboratory QA Samples")
proportion_ATXtotal <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
proportion_ATXparticulate <- data %>%
filter(data$Analyte == "Anatoxin-A, Particulate") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
proportion_ATXdissolved <- data %>%
filter(data$Analyte == "Anatoxin-A, Dissolved") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
## For total
ggplot(proportion_ATXtotal, aes(x = Result_missing, y = proportion)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(x = "Result Missing", y = "Proportion") +
ggtitle("Proportion of Missing Results for Anatoxin-A, Total")
## For particulate
ggplot(proportion_ATXparticulate, aes(x = Result_missing, y = proportion)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(x = "Result Missing", y = "Proportion") +
ggtitle("Proportion of Missing Results for Anatoxin-A, Particulate")
## For dissolved
ggplot(proportion_ATXdissolved, aes(x = Result_missing, y = proportion)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(x = "Result Missing", y = "Proportion") +
ggtitle("Proportion of Missing Results for Anatoxin-A, Dissolved")
# Filter out rows with NA values in SampleDate
data <- data %>%
filter(!is.na(SampleDate))
ATX_total_streams <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
filter(grepl("river|creek|stream", StationName, ignore.case = TRUE))
ATX_total_lakes <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
filter(!grepl("river|creek|stream", StationName, ignore.case = TRUE))
ATX_proportion <- data %>%
mutate(LocationType = case_when(
grepl("stream|creek|river", StationName, ignore.case = TRUE) ~ "Stream",
grepl("lake|pond|beach", StationName, ignore.case = TRUE) ~ "Lake",
TRUE ~ "Other"
))
ATX_proportion$Year <- year(mdy(ATX_proportion$SampleDate))
proportion_results <- ATX_proportion %>%
group_by(LocationType, Year) %>%
summarize(percentage = (n() / nrow(data)) * 100)
print(proportion_results)
percent_results <- proportion_results %>%
filter(LocationType != "Other")
# Graphing proportions based on location type and year ----
percent_results %>%
mutate(LocationType = factor(LocationType,
levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, fill = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", fill = "Year") +
theme_minimal() +
scale_fill_viridis_d(option = "H") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
# Graphing proportions based on location type and year ----
percent_results %>%
mutate(LocationType = factor(LocationType,
levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, fill = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", fill = "Year") +
theme_minimal() +
scale_fill_viridis_d(option = "H") +
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
# Graphing proportions based on location type and year ----
percent_results %>%
mutate(LocationType = factor(LocationType,
levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", fill = "Year") +
theme_minimal() +
scale_fill_viridis_d(option = "H") +
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
rlang::last_trace()
# Graphing proportions based on location type and year ----
percent_results %>%
mutate(LocationType = factor(LocationType,
levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", fill = "Year") +
theme_minimal() +
scale_color_viridis_d(option = "H") +
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
percent_results %>%
mutate(LocationType = factor(LocationType, levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Year", shape = "Year") +
theme_minimal() +
scale_color_viridis_d(option = "H") +  # Use scale_color_viridis_d() instead of scale_fill_viridis_d()
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
percent_results %>%
mutate(LocationType = factor(LocationType, levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Year", shape = "Year") +
theme_minimal() +
scale_color_manual(values = viridis_pal()(n_distinct(percent_results$Year))) +  # Use viridis colors for each year
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
percent_results %>%
mutate(LocationType = factor(LocationType, levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Year", shape = "Year") +
theme_minimal() +
scale_color_manual(values = year_colors) +  # Assign custom colors for each year
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
year_colors <- c("red", "blue", "green", "orange", "purple", "yellow", "cyan", "magenta", "darkgreen", "darkblue", "darkred", "darkorange")
percent_results %>%
mutate(LocationType = factor(LocationType, levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Year", shape = "Year") +
theme_minimal() +
scale_color_manual(values = year_colors) +  # Assign custom colors for each year
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
year_colors <- c("red", "blue", "green", "orange", "purple", "yellow", "cyan", "magenta", "darkgreen", "darkblue", "darkred", "darkorange". "purple4")
year_colors <- c("red", "blue", "green", "orange", "purple", "yellow", "cyan", "magenta", "darkgreen", "darkblue", "darkred", "darkorange", "purple4")
year_colors <- c("red", "blue", "green", "orange", "purple", "yellow", "cyan", "magenta", "darkgreen", "darkblue", "darkred", "darkorange", "purple4")
percent_results %>%
mutate(LocationType = factor(LocationType, levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Year", shape = "Year") +
theme_minimal() +
scale_color_manual(values = year_colors) +  # Assign custom colors for each year
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
unique_years <- unique(percent_results$Year)
# Define custom colors for each unique year
year_colors <- rainbow(length(unique_years))  # Using rainbow palette as an example
percent_results %>%
mutate(LocationType = factor(LocationType, levels = c("Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = percentage, color = as.factor(Year), shape = as.factor(Year))) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Location Type", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Year", shape = "Year") +
theme_minimal() +
scale_color_manual(values = setNames(year_colors, unique_years)) +  # Assign custom colors for each unique year
scale_shape_manual(values = c(16, 17)) +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, shape = LocationType)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type", shape = "Location Type") +
theme_minimal() +
scale_color_manual(values = c("Lake" = "blue", "Stream" = "red")) +  # Adjust colors as needed
scale_shape_manual(values = c("Lake" = 16, "Stream" = 17)) +  # Adjust shapes as needed
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, shape = LocationType)) +
geom_point(position = position_dodge(width = 0.5), size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type", shape = "Location Type") +
theme_minimal() +
#scale_color_manual(values = c("Lake" = "blue", "Stream" = "red")) +  # Adjust colors as needed
#scale_shape_manual(values = c("Lake" = 16, "Stream" = 17)) +  # Adjust shapes as needed
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
# Save plot to fit in conference poster
ggsave("Year_ggplot.png", plot = last_plot(), width = 10, height = 8, units = "in", dpi = 300)
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
scale_color_manual(values = c("Lake" = "blue", "Stream" = "red")) +  # Adjust colors as needed
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
#scale_color_manual(values = c("Lake" = "blue", "Stream" = "red")) +  # Adjust colors as needed
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))
# Graphing proportions based on location type and year ----
## This is a time series
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
# Graphing proportions based on location type and year ----
## This is a time series
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 14),
axis.title = element_text(size = 16))
# Graphing proportions based on location type and year ----
## This is a time series
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 18),
axis.title = element_text(size = 20))
# Graphing proportions based on location type and year ----
## This is a time series
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
# Graphing proportions based on location type and year ----
## This is a time series
percent_results %>%
ggplot(aes(x = as.factor(Year), y = percentage, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
# Save plot to fit in conference poster
ggsave("Year_ggplot.png", plot = last_plot(), width = 10, height = 8, units = "in", dpi = 300)
View(proportion_results)
View(percent_results)
View(ATX_total_streams)
View(ATX_total_streams)
View(ATX_total_streams)
filter(grepl("river|creek|stream", StationName, ignore.case = TRUE))
ATX_total_streams <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
filter(Result != "NA") %>%
filter(grepl("river|creek|stream", StationName, ignore.case = TRUE))
View(ATX_total_streams)
ATX_total_streams <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
filter(Result != "NA") %>%
filter(Result >0) %>%
filter(grepl("river|creek|stream", StationName, ignore.case = TRUE))
View(ATX_total_streams)
ATX_total_lakes <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
filter(Result != "NA") %>%
filter(Result >0) %>%
filter(!grepl("river|creek|stream", StationName, ignore.case = TRUE))
View(ATX_total_lakes)
View(data)
View(ATX_total_lakes)
# Filter out rows with NA values in SampleDate
data <- data %>%
filter(!is.na(SampleDate)) %>%
filter(data$Result != "NA") %>%
filter(data$Result >0) %>%
filter(grepl("river|creek|stream|lake", StationName, ignore.case = TRUE))
# Filter out rows with NA values in SampleDate
data <- data %>%
filter(!is.na(SampleDate)) %>%
filter(data$Result != "NA") %>%
filter(Result >0) %>%
filter(grepl("river|creek|stream|lake", StationName, ignore.case = TRUE))
View(data)
data$Year <- year(mdy(ATX_proportion$SampleDate))
data$Year <- year(mdy(data$SampleDate))
View(data)
# Graphing proportions based on location type and year ----
## This is a time series
data %>%
ggplot(aes(x = as.factor(Year), y = concentration, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
# Graphing proportions based on location type and year ----
## This is a time series
data %>%
ggplot(aes(x = as.factor(Year), y = Result, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
# Filter out rows with NA values in SampleDate
data <- data %>%
filter(!is.na(SampleDate)) %>%
filter(data$Result != "NA") %>%
filter(Result >0) %>%
filter(grepl("river|creek|stream|lake|pond|beach", StationName, ignore.case = TRUE))
ATX_results <- data %>%
mutate(LocationType = case_when(
grepl("stream|creek|river", StationName, ignore.case = TRUE) ~ "Stream",
grepl("lake|pond|beach", StationName, ignore.case = TRUE) ~ "Lake",
TRUE ~ "Other"))
View(ATX_results)
# Graphing proportions based on location type and year ----
## This is a time series
data %>%
ggplot(aes(x = as.factor(Year), y = Result, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "% of Results",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
View(ATX_results)
ATX_results <- data %>%
mutate(LocationType = case_when(
grepl("stream|creek|river", StationName, ignore.case = TRUE) ~ "Stream",
grepl("lake|pond|beach", StationName, ignore.case = TRUE) ~ "Lake",
TRUE ~ "Other"))
View(ATX_results)
View(ATX_results)
# Graphing proportions based on location type and year ----
## This is a time series
ATX_results %>%
ggplot(aes(x = as.factor(Year), y = Result, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "ATX Total (ug/L)",
title = "ATX Results by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
mean_results <- ATX_results %>%
group_by(Year, LocationType) %>%
summerize(mean_result = mean(Result, na.rm = TRUE))
mean_results <- ATX_results %>%
group_by(Year, LocationType) %>%
summerize(mean_results = mean(Result, na.rm = TRUE))
mean_results <- ATX_results %>%
group_by(Year, LocationType) %>%
summarize(mean_results = mean(Result, na.rm = TRUE))
View(mean_results)
mean_results %>%
ggplot(aes(x = as.factor(Year), y = mean_result, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "Mean Result",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
mean_results %>%
ggplot(aes(x = as.factor(Year), y = mean_results, color = LocationType, group = LocationType)) +
geom_line() +
geom_point(size = 3) +
labs(x = "Year", y = "Mean Result",
title = "ATX Streams vs Lakes by Year", color = "Location Type") +
theme_minimal() +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 25),
axis.text = element_text(size = 18),
axis.title = element_text(size = 25))
# setwd
getwd()
setwd("./Raw_Data")
getwd()
list.files()
data <- read_csv("CEDEN_allyears_ATX.csv")
data <- data %>%
filter(data$StationName !="Laboratory QA Samples")
proportion_ATXtotal <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
proportion_ATXparticulate <- data %>%
filter(data$Analyte == "Anatoxin-A, Particulate") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
library(tidyverse)
library(here)
library(dplyr)
library(leaflet)
library(lubridate)
library(ggplot2)
# setwd
getwd()
setwd("./Raw_Data")
getwd()
list.files()
data <- read_csv("CEDEN_allyears_ATX.csv")
data <- data %>%
filter(data$StationName !="Laboratory QA Samples")
proportion_ATXtotal <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
proportion_ATXparticulate <- data %>%
filter(data$Analyte == "Anatoxin-A, Particulate") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
proportion_ATXdissolved <- data %>%
filter(data$Analyte == "Anatoxin-A, Dissolved") %>%
group_by(Result_missing = is.na(Result)) %>%
summarize(proportion = n()/nrow(.))
## For total
ggplot(proportion_ATXtotal, aes(x = Result_missing, y = proportion)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(x = "Result Missing", y = "Proportion") +
ggtitle("Proportion of Missing Results for Anatoxin-A, Total")
## For particulate
ggplot(proportion_ATXparticulate, aes(x = Result_missing, y = proportion)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(x = "Result Missing", y = "Proportion") +
ggtitle("Proportion of Missing Results for Anatoxin-A, Particulate")
## For dissolved
ggplot(proportion_ATXdissolved, aes(x = Result_missing, y = proportion)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(x = "Result Missing", y = "Proportion") +
ggtitle("Proportion of Missing Results for Anatoxin-A, Dissolved")
# Filter out rows with NA values in SampleDate
data <- data %>%
filter(!is.na(SampleDate))
ATX_total_streams <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
filter(grepl("river|creek|stream", StationName, ignore.case = TRUE))
ATX_total_lakes <- data %>%
filter(data$Analyte == "Anatoxin-A, Total") %>%
filter(!grepl("river|creek|stream", StationName, ignore.case = TRUE))
ATX_proportion <- data %>%
mutate(LocationType = case_when(
grepl("stream|creek|river", StationName, ignore.case = TRUE) ~ "Stream",
grepl("lake|pond|beach", StationName, ignore.case = TRUE) ~ "Lake",
TRUE ~ "Other"
))
ATX_proportion$Year <- year(mdy(ATX_proportion$SampleDate))
proportion_results <- ATX_proportion %>%
group_by(LocationType, Year) %>%
summarize(proportion = n() / nrow(data))
print(proportion_results)
# Graphing proportions based on location type and year ----
proportion_results %>%
mutate(LocationType = factor(LocationType,
levels = c("Other", "Lake", "Stream"))) %>%
ggplot(aes(x = LocationType, y = proportion, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Location Type", y = "Proportion of Results",
title = "ATX Streams vs Lakes by Year", fill = "") +
theme_minimal() +
scale_fill_viridis_d(option = "H") +
theme(legend.position = "right", plot.title = element_text(hjust = 0.5))  # Center plot title horizontally
